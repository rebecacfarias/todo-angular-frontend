{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/app/todo.ts","./src/app/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080/api/todos'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms'\nimport { Todo } from './todo';\nimport { TodoService } from './todo.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title='frontend';\n  todos: Todo[] = [];\n  todo: Todo = new Todo;\n  form: FormGroup = new FormGroup({\n    description: new FormControl('', Validators.required)\n  })\n\n  constructor(private service: TodoService){}\n\n  ngOnInit(){\n   this.listTodos();\n  }\n\n  listTodos(){\n    this.service.listAll().subscribe(todoList => this.todos = todoList);\n  }\n\n  submit(){\n    console.log(this.form.value);\n    const todo: Todo = {...this.form.value};\n    this.service.save(todo).subscribe(todo => {\n      console.log(todo);\n      this.todos.push(todo);\n      this.form.reset();\n      });\n  }\n\n  delete(todo: Todo){\n    this.service.delete(todo.id).subscribe({\n      next: (response) => this.listTodos()\n    });\n  }\n\n  done(todo: Todo){\n    this.service.setAsDone(todo.id).subscribe({\n      next: (doneTodo) =>{\n        todo.done = doneTodo.done\n        todo.doneDate = doneTodo.doneDate\n      }\n    });\n  }\n}\n","<nav>\n  <ul class=\"nav justify-content-center\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" href=\"#\" id=\"app-name\">ToDoList</a>\n      <a class=\"nav-link disabled\" href=\"#\" id=\"nav-description\">made with angular</a>\n    </li>\n  </ul>\n</nav>\n\n<div class=\"container mt-4 content justify-content-center\" >\n  <h3>ToDos: </h3>\n  <hr />\n  <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-sm-6\">\n        <input type=\"text\" class=\"form-control\" formControlName=\"description\" [(ngModel)]=\"todo.description\"/>\n      </div>\n      <div class=\"col-sm-1\">\n        <button type=\"submit\" [disabled]=\"!todo.description\" class=\"btn btn btn-outline-light\" id=\"purple-btn\">Add</button>\n      </div>\n    </div>\n  </form>\n  <hr/>\n  <div class=\"row justify-content-center todo-list\">\n    <div class=\"col-md-7\">\n      <ul class=\"list-group\">\n        <li *ngFor=\"let todo of todos\" \n                  class=\"list-group-item d-flex justify-content-between align-items-center\">\n          <span class=\"{{todo.done ? 'done' : ''}}\">\n            {{todo.description}}\n          </span>\n          <span class=\"badge badge-light badge-pill\">{{ todo.done ? 'Completed at '+todo.doneDate : 'Created at '+todo.createdDate}}</span>\n          <div class=\"btn-group buttons\">\n              <button class=\"btn btn-success\" [disabled]=\"todo.done\"(click)=\"done(todo)\">Done</button>\n              <button class=\"btn btn-danger\" (click)=\"delete(todo)\">Delete</button>\n          </div>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","\r\nexport class Todo{\r\n    id: number;\r\n    description: string;\r\n    done: boolean;\r\n    createdDate: string;\r\n    doneDate: string;\r\n}","import { Injectable } from '@angular/core';\nimport { Todo } from './todo';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n  apiURL: string = environment.apiURL;\n\n  constructor(private http: HttpClient) { }\n\n  save(todo: Todo) : Observable<Todo> {\n    return this.http.post<Todo>(this.apiURL, todo);\n  }\n\n  listAll() : Observable<Todo[]> {\n    return this.http.get<Todo[]>(this.apiURL);\n  }\n\n  delete(id: number) : Observable<void>{\n    const url = `${this.apiURL}/${id}`;\n    return this.http.delete<void>(url);\n  }\n\n  setAsDone(id: number) : Observable<Todo>{\n    const url = `${this.apiURL}/${id}/done`;\n    return this.http.patch<Todo>(url,{});\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}